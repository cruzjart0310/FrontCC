@using X.PagedList;
@using X.PagedList.Mvc;
@model IEnumerable<WebAppKuspyKreme.Models.Coupon>

@{
    ViewBag.Title = "Index";
    var pagedList = (IPagedList)ViewBag.PageList;
}

<h2>Index</h2>

<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">
                    <span aria-hidden="true">&times;</span><span class="sr-only">Cerrar</span>
                </button>
                <h4 class="modal-title" id="myModalLabel">Coupon</h4>
            </div>
            <div class="modal-body">
                <div id="modal-content">loading</div>
            </div>
            @*<div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>
                </div>*@
        </div>
    </div>
</div>

<p>
    @Html.ActionLink("Create New", "Create")
</p>

<div class="form-horizontal">
    <div class="form-inline">

        @*<div class='input-group date' id='datetimepicker10'>
            <input type='text' class="form-control" placeholder="Date Init MM/DD/YYY" />
            <span class="input-group-addon">
                <span class="glyphicon glyphicon-calendar">
                </span>
            </span>
        </div>

        <div class='input-group date' id='datetimepicker10'>
            <input type='text' class="form-control" placeholder="Date End MM/DD/YYY" />
            <span class="input-group-addon">
                <span class="glyphicon glyphicon-calendar">
                </span>
            </span>
        </div>*@

        <label>Status</label>
        <select class="form-control">
            <option>DISPONIBLE</option>
            <option>CANJEADO</option>
            <option>VENCIDO</option>
        </select>

        <label>Establisment</label>
        <select class="form-control">
            <option>ESTABLISHMENT 1</option>
            <option>ESTABLISHMENT 2</option>
            <option>ESTABLISHMENT 3</option>
        </select>

        <input class="btn btn-primary" type="button" value="Search" onclick="location.href='@Url.Action("DownloadExcel","Coupon")' " />

        <input class="btn btn-success" type="button" value="Download Excel" onclick="location.href='@Url.Action("DownloadExcel","Coupon")' " />

    </div>
</div>
<br />
<br />

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Duration)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Serie)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CreatedAt)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Status)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Establishment)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Duration)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Serie)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedAt)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Status.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Establishment.Name)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.Id }) |

                @if (item.Status.Id.Equals(1))
                {
                    <a href="#myModal" class="BtnExchange btn btn-primary" data-toggle="modal" data-id="@item.Id"><i class="glyphicon glyphicon-pencil"></i> Exchange</a>
                }
            </td>
        </tr>
    }

</table>

@Html.PagedListPager(pagedList, page =>
    Url.Action("Index", new { page = page }),
    new PagedListRenderOptions
    {
        LiElementClasses = new string[] { "page-item" },
        PageClasses = new string[] { "page-link" }

    })


@section scripts{
    <script src="~/Content/Script/main.js"></script>
}

